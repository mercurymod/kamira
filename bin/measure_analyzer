#!/usr/bin/env coffee
program = require 'commander'
fs = require 'fs'
path = require 'path'
_ = require 'underscore'

program.version('0.0.1')
  .option('-M, --measures <path>', 'measures directory')
  .option('-U --utils <path>', 'utils file/directory')
  .option('-S --stage <stage>', 'stage (1 or 2)', Number, 2)
  .option('-I --insert', 'insert measures into Mongo DB')
  .parse(process.argv)

# config on a per-stage basis
stageSetup =
  1: fileExtension: '.js'
  2: fileExtension: '.json'

MeasureAnalyzer = require '../lib/measure-analyzer'

# read in util file(s)
utils = if fs.statSync(program.utils).isDirectory()
  obj = {}
  utilFiles = fs.readdirSync program.utils
  for file in _(utilFiles).select((f) -> path.extname(f) is '.js')
    pathName = path.join program.utils, file
    obj[pathName] = fs.readFileSync(pathName).toString()
  obj
else
  utils: fs.readFileSync(program.utils).toString()

# create measure analyzer, pass in utils
analyzer = new MeasureAnalyzer(utils, stage: "stage#{program.stage}")

# analyze each measure
fs.readdir program.measures, (err, files) ->
  console.log(err) if err?
  measures = for file in _(files).select((f) -> path.extname(f) is stageSetup[program.stage].fileExtension)
    pathName = path.join program.measures, file

    js = fs.readFileSync(pathName).toString()
           .replace(/<%=.*effective_date.*%>/, 1347983662)
           .replace('<%= init_js_frameworks %>', '')
    
    # pre-analysis
    analysis = if program.stage is 1
      analyzer.analyze(js, file)
    else if program.stage is 2
      json = JSON.parse(js)
      analyzer.analyze(json.map_fn, file)

    report = analysis.complexity()

    # post-analysis
    report.id = if program.stage is 1
      path.basename(file, ".js")
    else if program.stage is 2
      json.nqf_id # hooray for function scope
    report

  if program.insert
    # TODO stuff the measures into mongo
    console.log 'stuff the measures into mongo'

  console.log JSON.stringify(measures)
